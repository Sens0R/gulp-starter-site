/* ====================   MAPS   ==================== */

.color {
  @include modifiers($map: $colors, $attribute: 'color');
}

.color-bg {
  @include modifiers($map: $colors, $attribute: 'background-color');
}

.fw {
  @include modifiers($map: $font-weights, $attribute: 'font-weight');
}

/* ====================   NORMAL   ==================== */

.section {
  @include flex($flex-direction: column, $gap: var(--spacer-lg));
  padding-top: var(--spacer-xl);
  padding-bottom: var(--spacer-xl);
}

.lh {
  line-height: var(--lh);

  &-1 {
    line-height: 1;
  }

  &-sm {
    line-height: var(--lh-sm);
  }

  &-lg {
    line-height: var(--lh-lg);
  }
}

.text-center {
  text-align: center !important;
}

.uppercase {
  text-transform: uppercase !important;
}

.lowercase {
  text-transform: lowercase !important;
}

.capitalize {
  text-transform: capitalize !important;
}

.italic {
  font-style: italic !important;
}

.disable-select {
  user-select: none !important;
}

.nowrap {
  white-space: nowrap !important;
}

.visually-hidden {
  @include visually-hidden();
}

.link-space {
  @include link-space();
}

.transition {
  transition: var(--transition) !important;

  &-stop {
    transition: none !important;
  }
}

.overflow {
  &-hidden {
    overflow: hidden !important;
  }

  &-visible {
    overflow: visible !important;
  }
}

.flex-center {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

.rotate {
  &-right {
    rotate: -90deg;
  }

  &-left {
    rotate: 90deg;
  }

  &-top {
    rotate: -180deg;
  }
}

.position {
  &-static {
    position: static !important;
  }

  &-relative {
    position: relative !important;
  }

  &-absolute {
    position: absolute !important;
  }

  &-fixed {
    position: fixed !important;
  }

  &-sticky {
    position: sticky !important;
  }
}
